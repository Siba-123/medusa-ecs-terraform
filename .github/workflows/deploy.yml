name: Deploy Medusa to AWS ECS

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.tf'
      - 'ecs-task-definition.json'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: medusa-backend
  ECS_CLUSTER: medusa-cluster
  ECS_SERVICE: medusa-service
  TASK_DEFINITION: ecs-task-definition.json
  CONTAINER_NAME: medusa

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    # ======================
    # 1. Checkout Code
    # ======================
    - name: Checkout repository
      uses: actions/checkout@v3

    # ======================
    # 2. Configure AWS Credentials
    # ======================
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # ======================
    # 3. Install Terraform
    # ======================
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7

    # ======================
    # 4. Initialize & Apply Terraform
    # ======================
    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false

    # ======================
    # 5. Build & Push Docker Image
    # ======================
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    # ======================
    # 6. Update ECS Service
    # ======================
    - name: Update ECS task definition with new image
      id: update-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.update-task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
